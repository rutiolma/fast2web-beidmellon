<?php

/**
 * Implements hook_install().
 */
function ofed_uc_publication_deploy_install() {
  // Reset permissions
  drupal_flush_all_caches();

  module_load_include('inc', 'uc_store', 'uc_store.countries');

  // Import Belgian country file.
  $country_name = 'Belgium';
  $country_count = db_query("SELECT country_name FROM {uc_countries} WHERE country_name = :country_name", array(':country_name' => $country_name))->rowCount();
  if ($country_count === 0) {
    $file = 'belgium_56_3.cif';

    if (!uc_country_import($file)) {
      drupal_set_message(t('Country file @file could not import or had no install function.', array('@file' => $file)), 'error');
    }
  }

  // Remove default countries.
  _ofed_uc_publication_deploy_remove_country('Canada');
  _ofed_uc_publication_deploy_remove_country('United States');

  // Unset zone, street2 fields.
  variable_set('uc_address_fields', array(
    'first_name' => 1,
    'last_name' => 1,
    'company' => 1,
    'street1' => 1,
    'city' => 1,
    'country' => 1,
    'postal_code' => 1,
    'phone' => 1,
  ));
  variable_set('uc_address_fields_required', array(
    'first_name' => 1,
    'last_name' => 1,
    'street1' => 1,
    'city' => 1,
    'country' => 1,
    'postal_code' => 1,
  ));

  // Set up UC Product Power tools:
  db_query("REPLACE INTO {uc_power_tools} (`pcid`, `enabled`, `asku`, `asku_settings`, `lp`, `lp_settings`, `cost`, `cost_settings`, `sp`, `sp_settings`, `dq`, `dq_settings`, `pq`, `pq_settings`, `ship`, `lpos`, `lpos_settings`, `stock`, `stock_settings`, `stock_threshold`, `weight`, `weight_units`, `length`, `width`, `height`, `length_units`) VALUES ('ofed_uc_publication',1,2,'DOCUMENT-[node:nid]',2,0.000,1,0.000,1,0.000,1,1,1,1,3,1,0,0,0,0,0,'kg',0,0,0.000,'cm');");

  // Set up UC Customization Tools:
  // Set up variables.
  variable_set('uc_ct_string_products', 'Documents');
  variable_set('uc_ct_string_quantity', 'Number of copies');

  // To do: set up translated strings.

  // Set up permissions.
  $roles = array();
  $roles['Administrator'] = user_role_load_by_name('Administrator');
  $roles['Builder'] = user_role_load_by_name('Builder');
  $roles['Configurator'] = user_role_load_by_name('Configurator');
  $roles['Content Manager'] = user_role_load_by_name('Content Manager');
  $roles = array_filter($roles);

  foreach ($roles as $role) {
    $permissions = array(
      'create ofed_uc_publication content',
      'edit own ofed_uc_publication content',
      'edit any ofed_uc_publication content',
      'delete own ofed_uc_publication content',
      'delete any ofed_uc_publication content',
      'flag uc_ct_disable_addtocart',
      'unflag uc_ct_disable_addtocart'
    );
    user_role_grant_permissions($role->rid, $permissions);
  }
  if (!empty($roles['Configurator']->rid)) {
    user_role_grant_permissions($roles['Configurator']->rid, array(
      'administer store',
      'administer product power tools settings',
    ));
  }

  // Set up blocks.
  $theme = variable_get('theme_default');

  if (!empty($theme)) {
    $main_content = db_select('block', 'b')
      ->fields('b')
      ->condition('module', 'system', '=')
      ->condition('delta', 'main', '=')
      ->condition('theme', $theme)
      ->execute()
      ->fetchAssoc();

    // Expose "View: Publication translations" & "Multistep" blocks in content
    // area.
    $views_block_weight =  $main_content['weight'] + 1;
    db_update('block')
    ->fields(array(
     'status' => 1,
     'region' => $main_content['region'],
     'weight' => $views_block_weight,
    ))
    ->condition('theme', $theme)
    // Hash for language selection block:
    ->condition('delta', '4222ba2ad6c920f4ff784277743b63a4')
    ->condition('module', 'views')
    ->execute();

    $multistep_block_weight =  $main_content['weight'] - 1;
    db_update('block')
    ->fields(array(
      'status' => 1,
      'region' => $main_content['region'],
      'weight' => $multistep_block_weight,
    ))
    ->condition('theme', $theme)
    ->condition('delta', 'multistep')
    ->condition('module', 'uc_ct_multistep')
    ->execute();

    // Restrict visibility of Views block to Publication content type.
    db_merge('block_node_type')
    ->key(array(
      'module' => 'views',
      'delta' => '4222ba2ad6c920f4ff784277743b63a4',
    ))
    ->fields(array(
      'module' => 'views',
      'delta' => '4222ba2ad6c920f4ff784277743b63a4',
      'type' => 'ofed_uc_publication',
    ))
    ->execute();
  }

}

/**
 * @see uc_country_remove_form_submit
 */
function _ofed_uc_publication_deploy_remove_country($country_name) {
  module_load_include('inc', 'uc_store', 'uc_store.countries');

  // Fetch the country ID from the database.
  $country_id = db_query("SELECT country_id FROM {uc_countries} WHERE country_name = :country_name", array(':country_name' => $country_name))->fetchField();
  if (!$country_id) {
    return;
  }
  $result = db_query("SELECT * FROM {uc_countries} WHERE country_id = :id", array(':id' => $country_id));
  if (!($country = $result->fetchObject())) {
    drupal_set_message(t('Attempted to remove an invalid country.'), 'error');
  }

  db_delete('uc_countries')
  ->condition('country_id', $country_id)
  ->execute();
  db_delete('uc_zones')
  ->condition('zone_country_id', $country_id)
  ->execute();
  variable_del('uc_address_format_' . $country_id);

  $func_base = _uc_country_import_include($country_id, $country->version);
  if ($func_base !== FALSE) {
    $func = $func_base . '_uninstall';
    if (function_exists($func)) {
      $func();
    }
  }
}
